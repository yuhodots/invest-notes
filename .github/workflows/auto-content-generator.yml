name: Auto Content Generator

on:
  issues:
    types: [opened, labeled]

jobs:
  generate-content:
    if: |
      contains(github.event.issue.labels.*.name, 'content-request') &&
      (github.event.issue.user.login == 'yuhodots')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --locked

    - name: Extract issue information
      id: issue-info
      run: |
        # Single line variables
        echo "ISSUE_TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
        echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV

        # Multi-line variable for body
        echo "ISSUE_BODY<<EOF" >> $GITHUB_ENV
        echo "${{ github.event.issue.body }}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

        # Create slug from issue title
        SLUG=$(echo "${{ github.event.issue.title }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9가-힣]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
        echo "SLUG=$SLUG" >> $GITHUB_ENV

        # Get current date
        DATE=$(date +%Y-%m-%d)
        echo "DATE=$DATE" >> $GITHUB_ENV

    - name: Generate Korean content
      id: generate-korean
      run: |
        # Set UTF-8 encoding for proper Korean handling
        export LANG=C.UTF-8
        export LC_ALL=C.UTF-8

        # Run writer.py and capture the last line (file path)
        GENERATED_FILE=$(uv run python ai_workflows/writer.py \
          --title "${{ env.ISSUE_TITLE }}" \
          --body "${{ env.ISSUE_BODY }}" | tail -1)

        echo "Generated file: $GENERATED_FILE"

        # Verify file exists
        if [ -f "$GENERATED_FILE" ]; then
          echo "File successfully created at: $GENERATED_FILE"
          echo "KOREAN_FILE=$GENERATED_FILE" >> $GITHUB_OUTPUT
        else
          echo "Error: File not found at: $GENERATED_FILE"
          ls -la contents/kor/*/
          exit 1
        fi
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Generate English content
      run: |
        # Set UTF-8 encoding for proper Korean handling
        export LANG=C.UTF-8
        export LC_ALL=C.UTF-8

        # Save current directory
        ROOT_DIR=$(pwd)

        # Use the actual generated file path from previous step
        KOREAN_FILE="${{ steps.generate-korean.outputs.KOREAN_FILE }}"

        # Create English file path with same category structure
        ENGLISH_FILE=$(echo "$KOREAN_FILE" | sed 's|/kor/|/eng/|')

        echo "Translating: $KOREAN_FILE -> $ENGLISH_FILE"

        # Verify Korean file exists
        if [ ! -f "$KOREAN_FILE" ]; then
          echo "Error: Korean file not found at: $KOREAN_FILE"
          exit 1
        fi

        # Run translator from root directory
        uv run python ai_workflows/translator.py \
          --input "$KOREAN_FILE" \
          --output "$ENGLISH_FILE"
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        commit-message: |
          feat: auto-generated content for issue #${{ env.ISSUE_NUMBER }}

          - Generated Korean content: ${{ env.DATE }}-${{ env.SLUG }}.md
          - Generated English content: ${{ env.DATE }}-${{ env.SLUG }}.md

          Based on issue: ${{ env.ISSUE_TITLE }}

          Closes #${{ env.ISSUE_NUMBER }}
        title: "Auto-generated content: ${{ env.ISSUE_TITLE }}"
        body: |
          ## 자동 생성된 컨텐츠

          이 PR은 이슈 #${{ env.ISSUE_NUMBER }}에 대한 응답으로 AI가 자동 생성한 컨텐츠입니다.

          Closes #${{ env.ISSUE_NUMBER }}

          ### 생성된 파일들:
          - 📝 한국어: `${{ steps.generate-korean.outputs.KOREAN_FILE }}`
          - 📝 영어: (한국어 파일의 /eng/ 버전)

          ### 원본 이슈:
          **제목:** ${{ env.ISSUE_TITLE }}

          **링크:** #${{ env.ISSUE_NUMBER }}

          ---

          ✅ 검토 후 머지해주세요.
          ❌ 문제가 있다면 이슈를 닫고 다시 시도해주세요.
        branch: auto-content/${{ env.ISSUE_NUMBER }}-${{ env.SLUG }}
        labels: |
          auto-generated
          content
        reviewers: |
          ${{ github.event.issue.user.login }}

    - name: Add comment to issue
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🤖 **컨텐츠 생성 완료!**

            귀하의 요청에 따라 AI가 컨텐츠를 생성했습니다.

            📋 **생성된 파일들:**
            - 한국어: \`${{ steps.generate-korean.outputs.KOREAN_FILE }}\`
            - 영어: (한국어 파일의 eng 버전)

            🔍 **다음 단계:**
            PR을 확인하고 검토해주세요. 문제가 없으면 머지하시면 됩니다.

            ✨ 생성된 PR: [Auto-generated content: ${{ env.ISSUE_TITLE }}]`
          })

    - name: Add labels to issue
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['auto-processed', 'completed']
          })

